from PyQt6.QtWidgets import QApplication, QWidget, QPushButton
from PyQt6 import uic
import sys

class UI01(QWidget):
    def __init__(self):
        super().__init__()
        # 載入 UI 文件
        uic.loadUi('uitest.ui', self)

        # 連接按鈕 quitButton 到退出功能
        self.quitButton.clicked.connect(self.close)

# 主程式
if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = UI01()
    window.show()
    sys.exit(app.exec())
    background-color: green;
    color: white;
    font-weight: bold;
    border-radius: 5px;
    padding: 5px;
    background-color: green;  /* 設定綠色背景 */
color: white;            /* 設定白色文字 */
font-weight: bold;       /* 文字加粗 */
border-radius: 5px;      /* 圓角邊框 */
padding: 5px;            /* 內邊距 5px */
from PyQt6.QtWidgets import QApplication, QWidget, QMessageBox
from PyQt6 import uic
import sys
class ToDoApp(QWidget):
    def __init__(self):
        super().__init__()
        # 載入 UI
        uic.loadUi('todo_app.ui', self)
        self.addButton.clicked.connect(self.add_task)
self.deleteButton.clicked.connect(self.delete_task)
self.markCompleteButton.clicked.connect(self.mark_complete)
def add_task(self):
    task = self.taskInput.text()
    if task.strip():
        self.taskList.addItem(task)
        self.taskInput.clear()
    else:
        QMessageBox.warning(self, "Error", "Task cannot be empty")
        def delete_task(self):
    selected_task = self.taskList.currentItem()
    if selected_task:
        self.taskList.takeItem(self.taskList.row(selected_task))
    else:
        QMessageBox.warning(self, "Error", "No task selected")
        def mark_complete(self):
    selected_task = self.taskList.currentItem()
    if selected_task:
        selected_task.setText(f"{selected_task.text()} (Completed)")
    else:
        QMessageBox.warning(self, "Error", "No task selected")

        if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = ToDoApp()
    window.show()
    sys.exit(app.exec())
    from PyQt6.QtWidgets import QApplication, QWidget, QMessageBox
from PyQt6 import uic
import sys

class ToDoApp(QWidget):
    def __init__(self):
        super().__init__()
        # 載入 UI
        uic.loadUi('todo_app.ui', self)

        # 連接功能
        self.addButton.clicked.connect(self.add_task)
        self.deleteButton.clicked.connect(self.delete_task)
        self.markCompleteButton.clicked.connect(self.mark_complete)

    def add_task(self):
        task = self.taskInput.text()
        if task.strip():
            self.taskList.addItem(task)
            self.taskInput.clear()
        else:
            QMessageBox.warning(self, "Error", "Task cannot be empty")

    def delete_task(self):
        selected_task = self.taskList.currentItem()
        if selected_task:
            self.taskList.takeItem(self.taskList.row(selected_task))
        else:
            QMessageBox.warning(self, "Error", "No task selected")

    def mark_complete(self):
        selected_task = self.taskList.currentItem()
        if selected_task:
            selected_task.setText(f"{selected_task.text()} (Completed)")
        else:
            QMessageBox.warning(self, "Error", "No task selected")

# 主程式
if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = ToDoApp()
    window.show()
    sys.exit(app.exec())
